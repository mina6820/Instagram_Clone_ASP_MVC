@model List<ApplicationUser>

<div id="search" class="search_section">
    <h2 >Search</h2>
    <form id="searchForm" method="get" asp-action="SearchUsers" asp-controller="Home">
        <input type="text" placeholder="Search" id="NameSearch" name="Name" >
    </form>
    <div class="find">
        <div class="desc"></div>
        <div class="account" style="max-height: 300px; overflow-y: auto;" id="searchResults">
            @if (ViewBag.Users != null)
            {
                @foreach (ApplicationUser relationship in ViewBag.Users)
                {
                    <div class="cart">
                        <div>
                            <div class="img">
                                @*<img src="/images/@relationship.ProfilePicture.Name" alt="">*@
                            </div>
                            <div class="info follower-info">
                                <a href="/FriendsProfile/Index/@relationship.Id" class="name" style="color:black;text-decoration:none">@relationship.UserName</a>
                                <input style="visibility:hidden" value="@relationship.Id" class="GetID" />
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No data available.</p> @* Handle case where Model is null *@
            }
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var input = document.getElementById("NameSearch");
        input.addEventListener("input", function () {
            var searchTerm = input.value;
            // Check if the search term is empty
            if (searchTerm.trim() === "") {
                document.getElementById("searchResults").innerHTML = "";
                return; // Exit function early if search term is empty
            }

            // Fetch data using AJAX based on the search input
            fetch("/Home/SearchUsers?Name=" + searchTerm)
                .then(response => response.text())
                .then(data => {
                    // Create a temporary element to hold the fetched data
                    var tempElement = document.createElement('div');
                    tempElement.innerHTML = data;
                    // Select only the elements you want to append
                    var followers = tempElement.querySelectorAll('.cart');
                    // Clear previous results
                    document.getElementById("searchResults").innerHTML = "";
                    // Append each follower element to the existing content
                    followers.forEach(function (follower) {
                        document.getElementById("searchResults").appendChild(follower);
                    });
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        });
    });
</script>
